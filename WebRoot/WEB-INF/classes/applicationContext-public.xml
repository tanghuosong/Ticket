<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- 开启注解方式 -->
	<context:component-scan base-package="com.zy.ticket.."/>
	
	<!-- 第一步：连接数据库 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/ticket"/>
		<property name="user" value="root"/>
		<property name="password" value="root"/>
	</bean>
	<!-- 第二步：配置sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"/>
		<!-- 配置mysql数据库方言
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		 -->
		<!-- 加载映射文件 
		<property name="mappingResources">
			<list>
				<value>com/zy/ticket/bean/Driver.hbm.xml</value>
				<value>com/zy/ticket/bean/CarType.hbm.xml</value>
				<value>com/zy/ticket/bean/Car.hbm.xml</value>
			</list>
		</property>
		-->
	</bean>
	<!-- 第三步：配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 第四步：配置通知，哪些方法 需要什么样的事务-->
	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 第五步：通知+切面表达式才是完整的切入路径 -->
		<aop:pointcut expression="execution(* com.zy.ticket.dao.impl.*.*(..))" id="pointcut"/>
		<aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
	</aop:config>
	
	<!-- 以下是注入配置 -->
	<!-- 配置dao -->
	<bean id="baseDao" class="com.zy.ticket.dao.impl.BaseDaoImpl" lazy-init="true">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="driverDao" class="com.zy.ticket.dao.impl.DriverDaoImpl" parent="baseDao"/>
	<bean id="carTypeDao" class="com.zy.ticket.dao.impl.CarTypeDaoImpl" parent="baseDao"/>
	<bean id="carDao" class="com.zy.ticket.dao.impl.CarDaoImpl" parent="baseDao"/>
	<bean id="addressDao" class="com.zy.ticket.dao.impl.AddressDaoImpl" parent="baseDao"/>
	<bean id="userDao" class="com.zy.ticket.dao.impl.UserDaoImpl" parent="baseDao"/>
	<bean id="managerDao" class="com.zy.ticket.dao.impl.ManagerDaoImpl" parent="baseDao"/>
	
	<!-- 配置service -->
	<bean id="baseService" class="com.zy.ticket.service.impl.BaseService" lazy-init="true" >
		<property name="driverDao" ref="driverDao"/>
		<property name="carTypeDao" ref="carTypeDao"/>
		<property name="carDao" ref="carDao"/>
		<property name="addressDao" ref="addressDao"/>
		<property name="userDao" ref="userDao"/>
		<property name="managerDao" ref="managerDao"/>
	</bean>
	<bean id="driverService" class="com.zy.ticket.service.impl.DriverServiceImpl" parent="baseService"/>
	<bean id="carTypeService" class="com.zy.ticket.service.impl.CarTypeServiceImpl" parent="baseService"/>
	<bean id="carService" class="com.zy.ticket.service.impl.CarServiceImpl" parent="baseService"/>
	<bean id="addressService" class="com.zy.ticket.service.impl.AddressServiceImpl" parent="baseService"/>
	<bean id="userService" class="com.zy.ticket.service.impl.UserServiceImpl" parent="baseService"/>
	<bean id="managerService" class="com.zy.ticket.service.impl.ManagerServiceImpl" parent="baseService"/>
	
	<!-- 配置action -->
	<bean id="baseAction" class="com.zy.ticket.action.BaseAction" scope="prototype">
		<property name="driverService" ref="driverService"/>
		<property name="carTypeService" ref="carTypeService"/>
		<property name="carService" ref="carService"/>
		<property name="addressService" ref="addressService"/>
		<property name="userService" ref="userService"/>
		<property name="managerService" ref="managerService"/>
	</bean>
	
	<bean id="sendAction" class="com.zy.ticket.action.SendAction"/>
	<bean id="driverAction" class="com.zy.ticket.action.DriverAction" parent="baseAction" scope="prototype"/>
	<bean id="carTypeAction" class="com.zy.ticket.action.CarTypeAction" parent="baseAction" scope="prototype"/>
	<bean id="carAction" class="com.zy.ticket.action.CarAction" parent="baseAction" scope="prototype"/>
	<bean id="addressAction" class="com.zy.ticket.action.AddressAction" parent="baseAction" scope="prototype"/>
	<bean id="userAction" class="com.zy.ticket.action.UserAction" parent="baseAction" scope="prototype"/>
	<bean id="managerAction" class="com.zy.ticket.action.ManagerAction" parent="baseAction" scope="prototype"/>
</beans>